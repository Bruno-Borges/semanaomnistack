[33mcommit cd3cebc36d3fb3b10dfb121f27da2810c08b7759[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Bruno Borges <bruno.1997.borges@gmail.com>
Date:   Tue Jan 14 10:13:28 2020 -0300

    iniciando o backend

[1mdiff --git a/backend/index.js b/backend/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/backend/node_modules/.bin/mime b/backend/node_modules/.bin/mime[m
[1mnew file mode 100644[m
[1mindex 0000000..0dbddf0[m
[1m--- /dev/null[m
[1m+++ b/backend/node_modules/.bin/mime[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*) basedir=`cygpath -w "$basedir"`;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  "$basedir/node"  "$basedir/../mime/cli.js" "$@"[m
[32m+[m[32m  ret=$?[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  node  "$basedir/../mime/cli.js" "$@"[m
[32m+[m[32m  ret=$?[m
[32m+[m[32mfi[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/backend/node_modules/.bin/mime.cmd b/backend/node_modules/.bin/mime.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..8169562[m
[1m--- /dev/null[m
[1m+++ b/backend/node_modules/.bin/mime.cmd[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m@IF EXIST "%~dp0\node.exe" ([m
[32m+[m[32m  "%~dp0\node.exe"  "%~dp0\..\mime\cli.js" %*[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  @SETLOCAL[m
[32m+[m[32m  @SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m  node  "%~dp0\..\mime\cli.js" %*[m
[32m+[m[32m)[m
\ No newline at end of file[m
[1mdiff --git a/backend/node_modules/.yarn-integrity b/backend/node_modules/.yarn-integrity[m
[1mnew file mode 100644[m
[1mindex 0000000..87d46e5[m
[1m--- /dev/null[m
[1m+++ b/backend/node_modules/.yarn-integrity[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "systemParams": "win32-x64-72",[m
[32m+[m[32m  "modulesFolders": [[m
[32m+[m[32m    "node_modules"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "flags": [],[m
[32m+[m[32m  "linkedModules": [],[m
[32m+[m[32m  "topLevelPatterns": [[m
[32m+[m[32m    "express@^4.17.1"[m
[32m+[m[32m  ],[m
[32m+[m[32m  "lockfileEntries": {[m
[32m+[m[32m    "accepts@~1.3.7": "https://registry.yarnpkg.com/accepts/-/accepts-1.3.7.tgz#531bc726517a3b2b41f850021c6cc15eaab507cd",[m
[32m+[m[32m    "array-flatten@1.1.1": "https://registry.yarnpkg.com/array-flatten/-/array-flatten-1.1.1.tgz#9a5f699051b1e7073328f2a008968b64ea2955d2",[m
[32m+[m[32m    "body-parser@1.19.0": "https://registry.yarnpkg.com/body-parser/-/body-parser-1.19.0.tgz#96b2709e57c9c4e09a6fd66a8fd979844f69f08a",[m
[32m+[m[32m    "bytes@3.1.0": "https://registry.yarnpkg.com/bytes/-/bytes-3.1.0.tgz#f6cf7933a360e0588fa9fde85651cdc7f805d1f6",[m
[32m+[m[32m    "content-disposition@0.5.3": "https://registry.yarnpkg.com/content-disposition/-/content-disposition-0.5.3.tgz#e130caf7e7279087c5616c2007d0485698984fbd",[m
[32m+[m[32m    "content-type@~1.0.4": "https://registry.yarnpkg.com/content-type/-/content-type-1.0.4.tgz#e138cc75e040c727b1966fe5e5f8c9aee256fe3b",[m
[32m+[m[32m    "cookie-signature@1.0.6": "https://registry.yarnpkg.com/cookie-signature/-/cookie-signature-1.0.6.tgz#e303a882b342cc3ee8ca513a79999734dab3ae2c",[m
[32m+[m[32m    "cookie@0.4.0": "https://registry.yarnpkg.com/cookie/-/cookie-0.4.0.tgz#beb437e7022b3b6d49019d088665303ebe9c14ba",[m
[32m+[m[32m    "debug@2.6.9": "https://registry.yarnpkg.com/debug/-/debug-2.6.9.tgz#5d128515df134ff327e90a4c93f4e077a536341f",[m
[32m+[m[32m    "depd@~1.1.2": "https://registry.yarnpkg.com/depd/-/depd-1.1.2.tgz#9bcd52e14c097763e749b274c4346ed2e560b5a9",[m
[32m+[m[32m    "destroy@~1.0.4": "https://registry.yarnpkg.com/destroy/-/destroy-1.0.4.tgz#978857442c44749e4206613e37946205826abd80",[m
[32m+[m[32m    "ee-first@1.1.1": "https://registry.yarnpkg.com/ee-first/-/ee-first-1.1.1.tgz#590c61156b0ae2f4f0255732a158b266bc56b21d",[m
[32m+[m[32m    "encodeurl@~1.0.2": "https://registry.yarnpkg.com/encodeurl/-/encodeurl-1.0.2.tgz#ad3ff4c86ec2d029322f5a02c3a9a606c95b3f59",[m
[32m+[m[32m    "escape-html@~1.0.3": "https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988",[m
[32m+[m[32m    "etag@~1.8.1": "https://registry.yarnpkg.com/etag/-/etag-1.8.1.tgz#41ae2eeb65efa62268aebfea83ac7d79299b0887",[m
[32m+[m[32m    "express@^4.17.1": "https://registry.yarnpkg.com/express/-/express-4.17.1.tgz#4491fc38605cf51f8629d39c2b5d026f98a4c134",[m
[32m+[m[32m    "finalhandler@~1.1.2": "https://registry.yarnpkg.com/finalhandler/-/finalhandler-1.1.2.tgz#b7e7d000ffd11938d0fdb053506f6ebabe9f587d",[m
[32m+[m[32m    "forwarded@~0.1.2": "https://registry.yarnpkg.com/forwarded/-/forwarded-0.1.2.tgz#98c23dab1175657b8c0573e8ceccd91b0ff18c84",[m
[32m+[m[32m    "fresh@0.5.2": "https://registry.yarnpkg.com/fresh/-/fresh-0.5.2.tgz#3d8cadd90d976569fa835ab1f8e4b23a105605a7",[m
[32m+[m[32m    "http-errors@1.7.2": "https://registry.yarnpkg.com/http-errors/-/http-errors-1.7.2.tgz#4f5029cf13239f31036e5b2e55292bcfbcc85c8f",[m
[32m+[m[32m    "http-errors@~1.7.2": "https://registry.yarnpkg.com/http-errors/-/http-errors-1.7.3.tgz#6c619e4f9c60308c38519498c14fbb10aacebb06",[m
[32m+[m[32m    "iconv-lite@0.4.24": "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.24.tgz#2022b4b25fbddc21d2f524974a474aafe733908b",[m
[32m+[m[32m    "inherits@2.0.3": "https://registry.yarnpkg.com/inherits/-/inherits-2.0.3.tgz#633c2c83e3da42a502f52466022480f4208261de",[m
[32m+[m[32m    "inherits@2.0.4": "https://registry.yarnpkg.com/inherits/-/inherits-2.0.4.tgz#0fa2c64f932917c3433a0ded55363aae37416b7c",[m
[32m+[m[32m    "ipaddr.js@1.9.0": "https://registry.yarnpkg.com/ipaddr.js/-/ipaddr.js-1.9.0.tgz#37df74e430a0e47550fe54a2defe30d8acd95f65",[m
[32m+[m[32m    "media-typer@0.3.0": "https://registry.yarnpkg.com/media-typer/-/media-typer-0.3.0.tgz#8710d7af0aa626f8fffa1ce00168545263255748",[m
[32m+[m[32m    "merge-descriptors@1.0.1": "https://registry.yarnpkg.com/merge-descriptors/-/merge-descriptors-1.0.1.tgz#b00aaa556dd8b44568150ec9d1b953f3f90cbb61",[m
[32m+[m[32m    "methods@~1.1.2": "https://registry.yarnpkg.com/methods/-/methods-1.1.2.tgz#5529a4d67654134edcc5266656835b0f851afcee",[m
[32m+[m[32m    "mime-db@1.43.0": "https://registry.yarnpkg.com/mime-db/-/mime-db-1.43.0.tgz#0a12e0502650e473d735535050e7c8f4eb4fae58",[m
[32m+[m[32m    "mime-types@~2.1.24": "https://registry.yarnpkg.com/mime-types/-/mime-types-2.1.26.tgz#9c921fc09b7e149a65dfdc0da4d20997200b0a06",[m
[32m+[m[32m    "mime@1.6.0": "https://registry.yarnpkg.com/mime/-/mime-1.6.0.tgz#32cd9e5c64553bd58d19a568af452acff04981b1",[m
[32m+[m[32m    "ms@2.0.0": "https://registry.yarnpkg.com/ms/-/ms-2.0.0.tgz#5608aeadfc00be6c2901df5f9861788de0d597c8",[m
[32m+[m[32m    "ms@2.1.1": "https://registry.yarnpkg.com/ms/-/ms-2.1.1.tgz#30a5864eb3ebb0a66f2ebe6d727af06a09d86e0a",[m
[32m+[m[32m    "negotiator@0.6.2": "https://registry.yarnpkg.com/negotiator/-/negotiator-0.6.2.tgz#feacf7ccf525a77ae9634436a64883ffeca346fb",[m
[32m+[m[32m    "on-finished@~2.3.0": "https://registry.yarnpkg.com/on-finished/-/on-finished-2.3.0.tgz#20f1336481b083cd75337992a16971aa2d906947",[m
[32m+[m[32m    "parseurl@~1.3.3": "https://registry.yarnpkg.com/parseurl/-/parseurl-1.3.3.tgz#9da19e7bee8d12dff0513ed5b76957793bc2e8d4",[m
[32m+[m[32m    "path-to-regexp@0.1.7": "https://registry.yarnpkg.com/path-to-regexp/-/path-to-regexp-0.1.7.tgz#df604178005f522f15eb4490e7247a1bfaa67f8c",[m
[32m+[m[32m    "proxy-addr@~2.0.5": "https://registry.yarnpkg.com/proxy-addr/-/proxy-addr-2.0.5.tgz#34cbd64a2d81f4b1fd21e76f9f06c8a45299ee34",[m
[32m+[m[32m    "qs@6.7.0": "https://registry.yarnpkg.com/qs/-/qs-6.7.0.tgz#41dc1a015e3d581f1621776be31afb2876a9b1bc",[m
[32m+[m[32m    "range-parser@~1.2.1": "https://registry.yarnpkg.com/range-parser/-/range-parser-1.2.1.tgz#3cf37023d199e1c24d1a55b84800c2f3e6468031",[m
[32m+[m[32m    "raw-body@2.4.0": "https://registry.yarnpkg.com/raw-body/-/raw-body-2.4.0.tgz#a1ce6fb9c9bc356ca52e89256ab59059e13d0332",[m
[32m+[m[32m    "safe-buffer@5.1.2": "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.1.2.tgz#991ec69d296e0313747d59bdfd2b745c35f8828d",[m
[32m+[m[32m    "safer-buffer@>= 2.1.2 < 3": "https://registry.yarnpkg.com/safer-buffer/-/safer-buffer-2.1.2.tgz#44fa161b0187b9549dd84bb91802f9bd8385cd6a",[m
[32m+[m[32m    "send@0.17.1": "https://registry.yarnpkg.com/send/-/send-0.17.1.tgz#c1d8b059f7900f7466dd4938bdc44e11ddb376c8",[m
[32m+[m[32m    "serve-static@1.14.1": "https://registry.yarnpkg.com/serve-static/-/serve-static-1.14.1.tgz#666e636dc4f010f7ef29970a88a674320898b2f9",[m
[32m+[m[32m    "setprototypeof@1.1.1": "https://registry.yarnpkg.com/setprototypeof/-/setprototypeof-1.1.1.tgz#7e95acb24aa92f5885e0abef5ba131330d4ae683",[m
[32m+[m[32m    "statuses@>= 1.5.0 < 2": "https://registry.yarnpkg.com/statuses/-/statuses-1.5.0.tgz#161c7dac177659fd9811f43771fa99381478628c",[m
[32m+[m[32m    "statuses@~1.5.0": "https://registry.yarnpkg.com/statuses/-/statuses-1.5.0.tgz#161c7dac177659fd9811f43771fa99381478628c",[m
[32m+[m[32m    "toidentifier@1.0.0": "https://registry.yarnpkg.com/toidentifier/-/toidentifier-1.0.0.tgz#7e1be3470f1e77948bc43d94a3c8f4d7752ba553",[m
[32m+[m[32m    "type-is@~1.6.17": "https://registry.yarnpkg.com/type-is/-/type-is-1.6.18.tgz#4e552cd05df09467dcbc4ef739de89f2cf37c131",[m
[32m+[m[32m    "type-is@~1.6.18": "https://registry.yarnpkg.com/type-is/-/type-is-1.6.18.tgz#4e552cd05df09467dcbc4ef739de89f2cf37c131",[m
[32m+[m[32m    "unpipe@1.0.0": "https://registry.yarnpkg.com/unpipe/-/unpipe-1.0.0.tgz#b2bf4ee8514aae6165b4817829d21b2ef49904ec",[m
[32m+[m[32m    "unpipe@~1.0.0": "https://registry.yarnpkg.com/unpipe/-/unpipe-1.0.0.tgz#b2bf4ee8514aae6165b4817829d21b2ef49904ec",[m
[32m+[m[32m    "utils-merge@1.0.1": "https://registry.yarnpkg.com/utils-merge/-/utils-merge-1.0.1.tgz#9f95710f50a267947b2ccc124741c1028427e713",[m
[32m+[m[32m    "vary@~1.1.2": "https://registry.yarnpkg.com/vary/-/vary-1.1.2.tgz#2299f02c6ded30d4a5961b0b9f74524a18f634fc"[m
[32m+[m[32m  },[m
[32m+[m[32m  "files": [],[m
[32m+[m[32m  "artifacts": {}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/backend/node_modules/accepts/HISTORY.md b/backend/node_modules/accepts/HISTORY.md[m
[1mnew file mode 100644[m
[1mindex 0000000..0bf0417[m
[1m--- /dev/null[m
[1m+++ b/backend/node_modules/accepts/HISTORY.md[m
[36m@@ -0,0 +1,236 @@[m
[32m+[m[32m1.3.7 / 2019-04-29[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.6.2[m
[32m+[m[32m    - Fix sorting charset, encoding, and language with extra parameters[m
[32m+[m
[32m+[m[32m1.3.6 / 2019-04-28[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.24[m
[32m+[m[32m    - deps: mime-db@~1.40.0[m
[32m+[m
[32m+[m[32m1.3.5 / 2018-02-28[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.18[m
[32m+[m[32m    - deps: mime-db@~1.33.0[m
[32m+[m
[32m+[m[32m1.3.4 / 2017-08-22[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.16[m
[32m+[m[32m    - deps: mime-db@~1.29.0[m
[32m+[m
[32m+[m[32m1.3.3 / 2016-05-02[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.11[m
[32m+[m[32m    - deps: mime-db@~1.23.0[m
[32m+[m[32m  * deps: negotiator@0.6.1[m
[32m+[m[32m    - perf: improve `Accept` parsing speed[m
[32m+[m[32m    - perf: improve `Accept-Charset` parsing speed[m
[32m+[m[32m    - perf: improve `Accept-Encoding` parsing speed[m
[32m+[m[32m    - perf: improve `Accept-Language` parsing speed[m
[32m+[m
[32m+[m[32m1.3.2 / 2016-03-08[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.10[m
[32m+[m[32m    - Fix extension of `application/dash+xml`[m
[32m+[m[32m    - Update primary extension for `audio/mp4`[m
[32m+[m[32m    - deps: mime-db@~1.22.0[m
[32m+[m
[32m+[m[32m1.3.1 / 2016-01-19[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.9[m
[32m+[m[32m    - deps: mime-db@~1.21.0[m
[32m+[m
[32m+[m[32m1.3.0 / 2015-09-29[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.7[m
[32m+[m[32m    - deps: mime-db@~1.19.0[m
[32m+[m[32m  * deps: negotiator@0.6.0[m
[32m+[m[32m    - Fix including type extensions in parameters in `Accept` parsing[m
[32m+[m[32m    - Fix parsing `Accept` parameters with quoted equals[m
[32m+[m[32m    - Fix parsing `Accept` parameters with quoted semicolons[m
[32m+[m[32m    - Lazy-load modules from main entry point[m
[32m+[m[32m    - perf: delay type concatenation until needed[m
[32m+[m[32m    - perf: enable strict mode[m
[32m+[m[32m    - perf: hoist regular expressions[m
[32m+[m[32m    - perf: remove closures getting spec properties[m
[32m+[m[32m    - perf: remove a closure from media type parsing[m
[32m+[m[32m    - perf: remove property delete from media type parsing[m
[32m+[m
[32m+[m[32m1.2.13 / 2015-09-06[m
[32m+[m[32m===================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.6[m
[32m+[m[32m    - deps: mime-db@~1.18.0[m
[32m+[m
[32m+[m[32m1.2.12 / 2015-07-30[m
[32m+[m[32m===================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.4[m
[32m+[m[32m    - deps: mime-db@~1.16.0[m
[32m+[m
[32m+[m[32m1.2.11 / 2015-07-16[m
[32m+[m[32m===================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.3[m
[32m+[m[32m    - deps: mime-db@~1.15.0[m
[32m+[m
[32m+[m[32m1.2.10 / 2015-07-01[m
[32m+[m[32m===================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.2[m
[32m+[m[32m    - deps: mime-db@~1.14.0[m
[32m+[m
[32m+[m[32m1.2.9 / 2015-06-08[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.1[m
[32m+[m[32m    - perf: fix deopt during mapping[m
[32m+[m
[32m+[m[32m1.2.8 / 2015-06-07[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.1.0[m
[32m+[m[32m    - deps: mime-db@~1.13.0[m
[32m+[m[32m  * perf: avoid argument reassignment & argument slice[m
[32m+[m[32m  * perf: avoid negotiator recursive construction[m
[32m+[m[32m  * perf: enable strict mode[m
[32m+[m[32m  * perf: remove unnecessary bitwise operator[m
[32m+[m
[32m+[m[32m1.2.7 / 2015-05-10[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.5.3[m
[32m+[m[32m    - Fix media type parameter matching to be case-insensitive[m
[32m+[m
[32m+[m[32m1.2.6 / 2015-05-07[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.11[m
[32m+[m[32m    - deps: mime-db@~1.9.1[m
[32m+[m[32m  * deps: negotiator@0.5.2[m
[32m+[m[32m    - Fix comparing media types with quoted values[m
[32m+[m[32m    - Fix splitting media types with quoted commas[m
[32m+[m
[32m+[m[32m1.2.5 / 2015-03-13[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.10[m
[32m+[m[32m    - deps: mime-db@~1.8.0[m
[32m+[m
[32m+[m[32m1.2.4 / 2015-02-14[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Support Node.js 0.6[m
[32m+[m[32m  * deps: mime-types@~2.0.9[m
[32m+[m[32m    - deps: mime-db@~1.7.0[m
[32m+[m[32m  * deps: negotiator@0.5.1[m
[32m+[m[32m    - Fix preference sorting to be stable for long acceptable lists[m
[32m+[m
[32m+[m[32m1.2.3 / 2015-01-31[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.8[m
[32m+[m[32m    - deps: mime-db@~1.6.0[m
[32m+[m
[32m+[m[32m1.2.2 / 2014-12-30[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.7[m
[32m+[m[32m    - deps: mime-db@~1.5.0[m
[32m+[m
[32m+[m[32m1.2.1 / 2014-12-30[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.5[m
[32m+[m[32m    - deps: mime-db@~1.3.1[m
[32m+[m
[32m+[m[32m1.2.0 / 2014-12-19[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.5.0[m
[32m+[m[32m    - Fix list return order when large accepted list[m
[32m+[m[32m    - Fix missing identity encoding when q=0 exists[m
[32m+[m[32m    - Remove dynamic building of Negotiator class[m
[32m+[m
[32m+[m[32m1.1.4 / 2014-12-10[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.4[m
[32m+[m[32m    - deps: mime-db@~1.3.0[m
[32m+[m
[32m+[m[32m1.1.3 / 2014-11-09[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.3[m
[32m+[m[32m    - deps: mime-db@~1.2.0[m
[32m+[m
[32m+[m[32m1.1.2 / 2014-10-14[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.4.9[m
[32m+[m[32m    - Fix error when media type has invalid parameter[m
[32m+[m
[32m+[m[32m1.1.1 / 2014-09-28[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: mime-types@~2.0.2[m
[32m+[m[32m    - deps: mime-db@~1.1.0[m
[32m+[m[32m  * deps: negotiator@0.4.8[m
[32m+[m[32m    - Fix all negotiations to be case-insensitive[m
[32m+[m[32m    - Stable sort preferences of same quality according to client order[m
[32m+[m
[32m+[m[32m1.1.0 / 2014-09-02[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * update `mime-types`[m
[32m+[m
[32m+[m[32m1.0.7 / 2014-07-04[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Fix wrong type returned from `type` when match after unknown extension[m
[32m+[m
[32m+[m[32m1.0.6 / 2014-06-24[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.4.7[m
[32m+[m
[32m+[m[32m1.0.5 / 2014-06-20[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m * fix crash when unknown extension given[m
[32m+[m
[32m+[m[32m1.0.4 / 2014-06-19[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * use `mime-types`[m
[32m+[m
[32m+[m[32m1.0.3 / 2014-06-11[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * deps: negotiator@0.4.6[m
[32m+[m[32m    - Order by specificity when quality is the same[m
[32m+[m
[32m+[m[32m1.0.2 / 2014-05-29[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Fix interpretation when header not in request[m
[32m+[m[32m  * deps: pin negotiator@0.4.5[m
[32m+[m
[32m+[m[32m1.0.1 / 2014-01-18[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Identity encoding isn't always acceptable[m
[32m+[m[32m  * deps: negotiator@~0.4.0[m
[32m+[m
[32m+[m[32m1.0.0 / 2013-12-27[m
[32m+[m[32m==================[m
[32m+[m
[32m+[m[32m  * Genesis[m
[1mdiff --git a/backend/node_modules/accepts/LICENSE b/backend/node_modules/accepts/LICENSE[m
[1mnew file mode 100644[m
[1mindex 0000000..0616607[m
[1m--- /dev/null[m
[1m+++ b/backend/node_modules/accepts/LICENSE[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m(The MIT License)[m
[32m+[m
[32m+[m[32mCopyright (c) 2014 Jonathan Ong <me@jongleberry.com>[m
[32m+[m[32mCopyright (c) 2015 Douglas Christopher Wilson <doug@somethingdoug.com>[m
[32m+[m
[32m+[m[32mPermission is hereby granted, free of charge, to any person obtaining[m
[32m+[m[32ma copy of this software and associated documentation files (the[m
[32m+[m[32m'Software'), to deal in the Software without restriction, including[m
[32m+[m[32mwithout limitation the rights to use, copy, modify, merge, publish,[m
[32m+[m[32mdistribute, sublicense, and/or sell copies of the Software, and to[m
[32m+[m[32mpermit persons to whom the Software is furnished to do so, subject to[m
[32m+[m[32mthe following conditions:[m
[32m+[m
[32m+[m[32mThe above copyright notice and this permission notice shall be[m
[32m+[m[32mincluded in all copies or substantial portions of the Software.[m
[32m+[m
[32m+[m[32mTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,[m
[32m+[m[32mEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF[m
[32m+[m[32mMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.[m
[32m+[m[32mIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY[m
[32m+[m[32mCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,[m
[32m+[m[32mTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE[m
[32m+[m[32mSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.[m
[1mdiff --git a/backend/node_modules/accepts/README.md b/backend/node_modules/accepts/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..66a2f54[m
[1m--- /dev/null[m
[1m+++ b/backend/node_modules/accepts/README.md[m
[36m@@ -0,0 +1,142 @@[m
[32m+[m[32m# accepts[m
[32m+[m
[32m+[m[32m[![NPM Version][npm-version-image]][npm-url][m
[32m+[m[32m[![NPM Downloads][npm-downloads-image]][npm-url][m
[32m+[m[32m[![Node.js Version][node-version-image]][node-version-url][m
[32m+[m[32m[![Build Status][travis-image]][travis-url][m
[32m+[m[32m[![Test Coverage][coveralls-image]][coveralls-url][m
[32m+[m
[32m+[m[32mHigher level content negotiation based on [negotiator](https://www.npmjs.com/package/negotiator).[m
[32m+[m[32mExtracted from [koa](https://www.npmjs.com/package/koa) for general use.[m
[32m+[m
[32m+[m[32mIn addition to negotiator, it allows:[m
[32m+[m
[32m+[m[32m- Allows types as an array or arguments list, ie `(['text/html', 'application/json'])`[m
[32m+[m[32m  as well as `('text/html', 'application/json')`.[m
[32m+[m[32m- Allows type shorthands such as `json`.[m
[32m+[m[32m- Returns `false` when no types match[m
[32m+[m[32m- Treats non-existent headers as `*`[m
[32m+[m
[32m+[m[32m## Installation[m
[32m+[m
[32m+[m[32mThis is a [Node.js](https://nodejs.org/en/) module available through the[m
[32m+[m[32m[npm registry](https://www.npmjs.com/). Installation is done using the[m
[32m+[m[32m[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):[m
[32m+[m
[32m+[m[32m```sh[m
[32m+[m[32m$ npm install accepts[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## API[m
[32m+[m
[32m+[m[32m<!-- eslint-disable no-unused-vars -->[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mvar accepts = require('accepts')[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m### accepts(req)[m
[32m+[m
[32m+[m[32mCreate a new `Accepts` object for the given `req`.[m
[32m+[m
[32m+[m[32m#### .charset(charsets)[m
[32m+[m
[32m+[m[32mReturn the first accepted charset. If nothing in `charsets` is accepted,[m
[32m+[m[32mthen `false` is returned.[m
[32m+[m
[32m+[m[32m#### .charsets()[m
[32m+[m
[32m+[m[32mReturn the charsets that the request accepts, in the order of the client's[m
[32m+[m[32mpreference (most preferred first).[m
[32m+[m
[32m+[m[32m#### .encoding(encodings)[m
[32m+[m
[32m+[m[32mReturn the first accepted encoding. If nothing in `encodings` is accepted,[m
[32m+[m[32mthen `false` is returned.[m
[32m+[m
[32m+[m[32m#### .encodings()[m
[32m+[m
[32m+[m[32mReturn the encodings that the request accepts, in the order of the client's[m
[32m+[m[32mpreference (most preferred first).[m
[32m+[m
[32m+[m[32m#### .language(languages)[m
[32m+[m
[32m+[m[32mReturn the first accepted language. If nothing in `languages` is accepted,[m
[32m+[m[32mthen `false` is returned.[m
[32m+[m
[32m+[m[32m#### .languages()[m
[32m+[m
[32m+[m[32mReturn the languages that the request accepts, in the order of the client's[m
[32m+[m[32mpreference (most preferred first).[m
[32m+[m
[32m+[m[32m#### .type(types)[m
[32m+[m
[32m+[m[32mReturn the first accepted type (and it is returned as the same text as what[m
[32m+[m[32mappears in the `types` array). If nothing in `types` is accepted, then `false`[m
[32m+[m[32mis returned.[m
[32m+[m
[32m+[m[32mThe `types` array can contain full MIME types or file extensions. Any value[m
[32m+[m[32mthat is not a full MIME types is passed to `require('mime-types').lookup`.[m
[32m+[m
[32m+[m[32m#### .types()[m
[32m+[m
[32m+[m[32mReturn the types that the request accepts, in the order of the client's[m
[32m+[m[32mpreference (most preferred first).[m
[32m+[m
[32m+[m[32m## Examples[m
[32m+[m
[32m+[m[32m### Simple type negotiation[m
[32m+[m
[32m+[m[32mThis simple example shows how to use `accepts` to return a different typed[m
[32m+[m[32mrespond body based on what the client wants to accept. The server lists it's[m
[32m+[m[32mpreferences in order and will get back the best match between the client and[m
[32m+[m[32mserver.[m
[32m+[m
[32m+[m[32m```js[m
[32m+[m[32mvar accepts = require('accepts')[m
[32m+[m[32mvar http = require('http')[m
[32m+[m
[32m+[m[32mfunction app (req, res) {[m
[32m+[m[32m  var accept = accepts(req)[m
[32m+[m
[32m+[m[32m  // the order of this list is significant; should be server preferred order[m
[32m+[m[32m  switch (accept.type(['json', 'html'])) {[m
[32m+[m[32m    case 'json':[m
[32m+[m[32m      res.setHeader('Content-Type', 'application/json')[m
[32m+[m[32m      res.write('{"hello":"world!"}')[m
[32m+[m[32m      break[m
[32m+[m[32m    case 'html':[m
[32m+[m[32m      res.setHeader('Content-Type', 'text/html')[m
[32m+[m[32m      res.write('<b>hello, world!</b>')[m
[32m+[m[32m      break[m
[32m+[m[32m    default:[m
[32m+[m[32m      // the fallback is text/plain, so no need to specify it above[m
[32m+[m[32m      res.setHeader('Content-Type', 'text/plain')[m
[32m+[m[32m      res.write('hello, world!')[m
[32m+[m[32m      break[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  res.end()[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mhttp.createServer(app).listen(3000)[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32mYou can test this out with the cURL program:[m
[32m+[m[32m```sh[m
[32m+[m[32mcurl -I -H'Accept: text/html' http://localhost:3000/[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m## License[m
[32m+[m
[32m+[m[32m[MIT](LICENSE)[m
[32m+[m
[32m+[m[32m[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/accepts/master[m
[32m+[m[32m[coveralls-url]: https://coveralls.io/r/jshttp/accepts?branch=master[m
[32m+[m[32m[node-version-image]: https://badgen.net/npm/node/accepts[m
[32m+[m[32m[node-version-url]: https://nodejs.org/en/download[m
[32m+[m[32m[npm-downloads-image]: https://badgen.net/npm/dm/accepts[m
[32m+[m[32m[npm-url]: https://npmjs.org/package/accepts[m
[32m+[m[32m[npm-version-image]: https://badgen.net/npm/v/accepts[m
[32m+[m[32m[travis-image]: https://badgen.net/travis/jshttp/accepts/master[m
[32m+[m[32m[travis-url]: https://travis-ci.org/jshttp/accepts[m
[1mdiff --git a/backend/node_modules/accepts/index.js b/backend/node_modules/accepts/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e9b2f63[m
[1m--- /dev/null[m
[1m+++ b/backend/node_modules/accepts/index.js[m
[36m@@ -0,0 +1,238 @@[m
[32m+[m[32m/*![m
[32m+[m[32m * accepts[m
[32m+[m[32m * Copyright(c) 2014 Jonathan Ong[m
[32m+[m[32m * Copyright(c) 2015 Douglas Christopher Wilson[m
[32m+[m[32m * MIT Licensed[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Module dependencies.[m
[32m+[m[32m * @private[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mvar Negotiator = require('negotiator')[m
[32m+[m[32mvar mime = require('mime-types')[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Module exports.[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mmodule.exports = Accepts[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Create a new Accepts object for the given req.[m
[32m+[m[32m *[m
[32m+[m[32m * @param {object} req[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mfunction Accepts (req) {[m
[32m+[m[32m  if (!(this instanceof Accepts)) {[m
[32m+[m[32m    return new Accepts(req)[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  this.headers = req.headers[m
[32m+[m[32m  this.negotiator = new Negotiator(req)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Check if the given `type(s)` is acceptable, returning[m
[32m+[m[32m * the best match when true, otherwise `undefined`, in which[m
[32m+[m[32m * case you should respond with 406 "Not Acceptable".[m
[32m+[m[32m *[m
[32m+[m[32m * The `type` value may be a single mime type string[m
[32m+[m[32m * such as "application/json", the extension name[m
[32m+[m[32m * such as "json" or an array `["json", "html", "text/plain"]`. When a list[m
[32m+[m[32m * or array is given the _best_ match, if any is returned.[m
[32m+[m[32m *[m
[32m+[m[32m * Examples:[m
[32m+[m[32m *[m
[32m+[m[32m *     // Accept: text/html[m
[32m+[m[32m *     this.types('html');[m
[32m+[m[32m *     // => "html"[m
[32m+[m[32m *[m
[32m+[m[32m *     // Accept: text/*, application/json[m
[32m+[m[32m *     this.types('html');[m
[32m+[m[32m *     // => "html"[m
[32m+[m[32m *     this.types('text/html');[m
[32m+[m[32m *     // => "text/html"[m
[32m+[m[32m *     this.types('json', 'text');[m
[32m+[m[32m *     // => "json"[m
[32m+[m[32m *     this.types('application/json');[m
[32m+[m[32m *     // => "application/json"[m
[32m+[m[32m *[m
[32m+[m[32m *     // Accept: text/*, application/json[m
[32m+[m[32m *     this.types('image/png');[m
[32m+[m[32m *     this.types('png');[m
[32m+[m[32m *     // => undefined[m
[32m+[m[32m *[m
[32m+[m[32m *     // Accept: text/*;q=.5, application/json[m
[32m+[m[32m *     this.types(['html', 'json']);[m
[32m+[m[32m *     this.types('html', 'json');[m
[32m+[m[32m *     // => "json"[m
[32m+[m[32m *[m
[32m+[m[32m * @param {String|Array} types...[m
[32m+[m[32m * @return {String|Array|Boolean}[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mAccepts.prototype.type =[m
[32m+[m[32mAccepts.prototype.types = function (types_) {[m
[32m+[m[32m  var types = types_[m
[32m+[m
[32m+[m[32m  // support flattened arguments[m
[32m+[m[32m  if (types && !Array.isArray(types)) {[m
[32m+[m[32m    types = new Array(arguments.length)[m
[32m+[m[32m    for (var i = 0; i < types.length; i++) {[m
[32m+[m[32m      types[i] = arguments[i][m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // no types, return all requested types[m
[32m+[m[32m  if (!types || types.length === 0) {[m
[32m+[m[32m    return this.negotiator.mediaTypes()[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // no accept header, return first given type[m
[32m+[m[32m  if (!this.headers.accept) {[m
[32m+[m[32m    return types[0][m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  var mimes = types.map(extToMime)[m
[32m+[m[32m  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))[m
[32m+[m[32m  var first = accepts[0][m
[32m+[m
[32m+[m[32m  return first[m
[32m+[m[32m    ? types[mimes.indexOf(first)][m
[32m+[m[32m    : false[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Return accepted encodings or best fit based on `encodings`.[m
[32m+[m[32m *[m
[32m+[m[32m * Given `Accept-Encoding: gzip, deflate`[m
[32m+[m[32m * an array sorted by quality is returned:[m
[32m+[m[32m *[m
[32m+[m[32m *     ['gzip', 'deflate'][m
[32m+[m[32m *[m
[32m+[m[32m * @param {String|Array} encodings...[m
[32m+[m[32m * @return {String|Array}[m
[32m+[m[32m * @public[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mAccepts.prototype.encoding =[m
[32m+[m[32mAccepts.prototype.encodings = function (encodings_) {[m
[32m+[m[32m  var encodings = encodings_[m
[32m+[m
[32m+[m[32m  // support flattened arguments[m
[32m+[m[32m  if (encodings && !Array.isArray(encodings)) {[m
[32m+[m[32m    encodings = new Array(arguments.length)[m
[32m+[m[32m    for (var i = 0; i < encodings.length; i++) {[m
[32m+[m[32m      encodings[i] = arguments[i][m
[32m+[m[32m    }[m
[32m+[m